{"version":3,"sources":["ng://directives/lib/directives.service.ts","ng://directives/lib/directives.component.ts","ng://directives/lib/copy.directive.ts","ng://directives/lib/find-location.directive.ts","ng://directives/lib/directives.module.ts"],"names":["DirectivesService","Injectable","args","providedIn","DirectivesComponent","prototype","ngOnInit","Component","selector","template","CopyDirective","el","this","Object","defineProperty","value","_value","click","input","document","createElement","innerText","body","appendChild","select","execCommand","remove","Directive","ElementRef","Input","HostListener","FindLocationDirective","ngAfterViewChecked","datas","block","nativeElement","getBoundingClientRect","console","log","ViewChild","static","DirectivesModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"qUAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,iBACVC,SAAU,6FAcZL,EAlBA,GCAAM,EAAA,WAWE,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EAYtB,OAfEE,OAAAC,eAAmBJ,EAAAL,UAAA,OAAI,KAAvB,SAAwBU,GACtBH,KAAKI,OAASD,mCAIQL,EAAAL,UAAAY,MAAxB,eACQC,EAAQC,SAASC,cAAc,SACrCF,EAAMH,MAAQH,KAAKI,QAAWJ,KAAKD,GAAgB,cAAiBU,UAEpEF,SAASG,KAAKC,YAAYL,GAC1BA,EAAMM,SACNL,SAASM,YAAY,QAErBP,EAAMQ,8BAnBTC,EAAAA,UAASzB,KAAA,CAAC,CAACM,SAAU,yDAFFoB,EAAAA,4CAQjBC,EAAAA,MAAK3B,KAAA,CAAC,uBAKN4B,EAAAA,aAAY5B,KAAA,CAAC,YAUhBQ,EAvBA,GCGA,IAAAqB,EAAA,WAAA,SAAAA,KAgBC,OAVEA,EAAA1B,UAAA2B,mBAAA,eACMC,EAAQrB,KAAKsB,MAAMC,cAAcC,wBACrCC,QAAQC,IAAI,WAAYL,wBAR5BN,EAAAA,UAASzB,KAAA,CAAC,CAACM,SAAU,uDAGlB+B,EAAAA,UAASrC,KAAA,CAAC,QAAS,CAAEsC,QAAQ,OAahCT,EAhBD,GCHA,IAAAU,EAAA,WAQA,SAAAA,KASgC,2BAT/BC,EAAAA,SAAQxC,KAAA,CAAC,CACRyC,aAAc,CAACvC,EAAqBM,EAAeqB,GACnDa,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAC1C,EACCM,EACDqB,OAEoBU,EAjBhC","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DirectivesService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-directives',\r\n  template: `\r\n    <p>\r\n      directives works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class DirectivesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({selector: '[libCopy]'})\r\n\r\nexport class CopyDirective {\r\n\r\n  private _value: string;\r\n\r\n  @Input('copy') set copy(value: string) {\r\n    this._value = value;\r\n  }\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('click')  click() {\r\n    const input = document.createElement('input');\r\n    input.value = this._value || (this.el.nativeElement as HTMLElement).innerText;\r\n\r\n    document.body.appendChild(input);\r\n    input.select();\r\n    document.execCommand('copy');\r\n\r\n    input.remove();\r\n  }\r\n}\r\n","import { AfterViewChecked, Directive, ElementRef, HostListener, ViewChild } from '@angular/core';\n// import { SelectedNevigationService } from 'src/app/main/services/selected-nevigation.service';\n\n@Directive({selector: '[libFindLocation]'})\nexport class FindLocationDirective implements AfterViewChecked { \n   x:any;\n   @ViewChild(\"block\", { static: false }) block: ElementRef;\n\n \n   ngAfterViewChecked() {\n     let datas = this.block.nativeElement.getBoundingClientRect();\n     console.log(\"datas = \", datas);\n   }\n  //  constructor(private el:ElementRef) { \n  //       const {x, y} = this.el.nativeElement.getBoundingClientRect();\n  //          console.log(x+'      x');\n  //          console.log(y+'      y');  \n\n  //            }\n }\n\n\n","import { NgModule } from '@angular/core';\r\nimport { DirectivesComponent } from './directives.component';\r\nimport { CopyDirective } from './copy.directive';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FindLocationDirective } from './find-location.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [DirectivesComponent, CopyDirective, FindLocationDirective],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [DirectivesComponent,\r\n             CopyDirective,\r\n            FindLocationDirective]\r\n})\r\nexport class DirectivesModule { }\r\n"]}