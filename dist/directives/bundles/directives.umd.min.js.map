{"version":3,"sources":["ng://directives/lib/directives.service.ts","ng://directives/lib/directives.component.ts","ng://directives/lib/copy.directive.ts","ng://directives/lib/directives.module.ts"],"names":["DirectivesService","Injectable","args","providedIn","DirectivesComponent","prototype","ngOnInit","Component","selector","template","CopyDirective","el","this","Object","defineProperty","value","_value","click","input","document","createElement","innerText","body","appendChild","select","execCommand","remove","Directive","ElementRef","Input","HostListener","DirectivesModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"qUAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,iBACVC,SAAU,6FAcZL,EAlBA,GCAAM,EAAA,WAWE,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EAYtB,OAfEE,OAAAC,eAAmBJ,EAAAL,UAAA,OAAI,KAAvB,SAAwBU,GACtBH,KAAKI,OAASD,mCAIQL,EAAAL,UAAAY,MAAxB,eACQC,EAAQC,SAASC,cAAc,SACrCF,EAAMH,MAAQH,KAAKI,QAAWJ,KAAKD,GAAgB,cAAiBU,UAEpEF,SAASG,KAAKC,YAAYL,GAC1BA,EAAMM,SACNL,SAASM,YAAY,QAErBP,EAAMQ,8BAnBTC,EAAAA,UAASzB,KAAA,CAAC,CAACM,SAAU,yDAFFoB,EAAAA,4CAQjBC,EAAAA,MAAK3B,KAAA,CAAC,uBAKN4B,EAAAA,aAAY5B,KAAA,CAAC,YAUhBQ,EAvBA,GCAA,IAAAqB,EAAA,WAOA,SAAAA,KAQgC,2BAR/BC,EAAAA,SAAQ9B,KAAA,CAAC,CACR+B,aAAc,CAAC7B,EAAqBM,GACpCwB,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAChC,EACCM,OAEmBqB,EAfhC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectivesService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-directives',\n  template: `\n    <p>\n      directives works!\n    </p>\n  `,\n  styles: []\n})\nexport class DirectivesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({selector: '[libCopy]'})\n\nexport class CopyDirective {\n\n  private _value: string;\n\n  @Input('copy') set copy(value: string) {\n    this._value = value;\n  }\n  constructor(private el: ElementRef) { }\n\n  @HostListener('click')  click() {\n    const input = document.createElement('input');\n    input.value = this._value || (this.el.nativeElement as HTMLElement).innerText;\n\n    document.body.appendChild(input);\n    input.select();\n    document.execCommand('copy');\n\n    input.remove();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DirectivesComponent } from './directives.component';\nimport { CopyDirective } from './copy.directive';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [DirectivesComponent, CopyDirective],\n  imports: [\n    CommonModule\n  ],\n  exports: [DirectivesComponent,\n             CopyDirective]\n})\nexport class DirectivesModule { }\n"]}