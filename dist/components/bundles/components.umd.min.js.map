{"version":3,"sources":["ng://components/lib/components.service.ts","ng://components/lib/components.component.ts","ng://components/lib/clock-and-date/clock-and-date.component.ts","ng://components/lib/components.module.ts","ng://components/lib/table/table.component.ts","ng://components/lib/table/table.module.ts"],"names":["ComponentsService","Injectable","args","providedIn","ComponentsComponent","prototype","ngOnInit","Component","selector","template","ClockAndDateComponent","zone","cd","this","time","isDestroy","_this","detach","runOutsideAngular","setTime","now","Date","getHours","formatNum","getMinutes","detectChanges","setTimeout","bind","i","ngOnDestroy","NgZone","ChangeDetectorRef","ComponentsModule","NgModule","declarations","imports","exports","TableComponent","dbClick","EventEmitter","displayedColumns","columns","map","_a","name","dataSource","MatTableDataSource","rows","ngOnChanges","changes","currentValue","paginator","getRecord","row","emit","encapsulation","ViewEncapsulation","None","Input","Output","ViewChild","MatPaginator","static","TableModule","CommonModule","MatTableModule","MatPaginatorModule","DirectivesModule"],"mappings":"0mBAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,iBACVC,SAAU,6FAcZL,EAlBA,GCAAM,EAAA,WAWE,SAAAA,EAAoBC,EAAsBC,GAAtBC,KAAAF,KAAAA,EAAsBE,KAAAD,GAAAA,EAF1CC,KAAAC,KAAO,QACPD,KAAAE,WAAY,EAwBd,OArBEL,EAAAL,UAAAC,SAAA,WAAA,IAAAU,EAAAH,KACEA,KAAKD,GAAGK,SACRJ,KAAKF,KAAKO,mBAAiB,WAAO,OAAAF,EAAKG,cAGzCT,EAAAL,UAAAc,QAAA,WACE,IAAIN,KAAKE,UAAT,KACMK,EAAM,IAAIC,KAChBR,KAAKC,KAAUM,EAAIE,WAAU,IAAIT,KAAKU,UAAUH,EAAII,cACpDX,KAAKD,GAAGa,gBACRC,WAAWb,KAAKM,QAAQQ,KAAKd,MAAO,OAGtCH,EAAAL,UAAAkB,UAAA,SAAUK,GACR,OAAOA,EAAI,GAAK,IAAIA,EAAMA,GAG5BlB,EAAAL,UAAAwB,YAAA,WACEhB,KAAKE,WAAY,uBA7BpBR,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,qBACVC,SAAA,0FAJqCqB,EAAAA,cAA9BC,EAAAA,qBAkCTrB,EAlCA,GCAA,IAAAsB,EAAA,WAMA,SAAAA,KAMgC,2BAN/BC,EAAAA,SAAQ/B,KAAA,CAAC,CACRgC,aAAc,CAAC9B,EAAqBM,GACpCyB,QAAS,GAETC,QAAS,CAAChC,OAEoB4B,EAZhC,GCAAK,EAAA,WAuBE,SAAAA,IAPUxB,KAAAyB,QAAU,IAAIC,EAAAA,aACxB1B,KAAA2B,iBAA4B,GA6B9B,OArBEH,EAAAhC,UAAAC,SAAA,WAAA,IAAAU,EAAAH,KACEa,YAAU,WACRV,EAAKwB,iBAAmBxB,EAAKyB,QAAQC,KAAG,SAAEC,GAAW,OAAVA,EAAAC,UAC1C,KAGF/B,KAAKgC,WAAa,IAAIC,EAAAA,mBAAwBjC,KAAKkC,OAItDV,EAAAhC,UAAA2C,YAAA,SAAYC,GACF,IAAAF,EAAAE,EAAAF,KACJA,IACDlC,KAAKgC,WAAa,IAAIC,EAAAA,mBAAwBC,EAAKG,cACnDrC,KAAKgC,WAAWM,UAAYtC,KAAKsC,YAItCd,EAAAhC,UAAA+C,UAAA,SAAUC,GACNxC,KAAKyB,QAAQgB,KAAKD,wBAtCvB9C,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,YACVC,SAAA,quBAEA8C,cAAcC,EAAAA,kBAAkBC,8qBAI/BC,EAAAA,oBACAA,EAAAA,uBACAC,EAAAA,0BAMAC,EAAAA,UAAS1D,KAAA,CAAC2D,EAAAA,aAAc,CAACC,QAAQ,OAwBpCzB,EA9CA,GCAA,IAAA0B,EAAA,WAQA,SAAAA,KAU2B,2BAV1B9B,EAAAA,SAAQ/B,KAAA,CAAC,CACRgC,aAAc,CAACG,GACfF,QAAS,CACP6B,EAAAA,aACAC,EAAAA,eACAC,EAAAA,mBACAC,EAAAA,kBAEF/B,QAAQ,CAACC,OAEgB0B,EAlB3B","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-components',\n  template: `\n    <p>\n      components works!\n    </p>\n  `,\n  styles: []\n})\nexport class ComponentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-clock-and-date',\n  templateUrl: './clock-and-date.component.html',\n  styleUrls: ['./clock-and-date.component.scss']\n})\nexport class ClockAndDateComponent implements OnInit ,OnDestroy {\n\n  time = '00:00';\n  isDestroy = false;\n  constructor(private zone: NgZone, private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.cd.detach();\n    this.zone.runOutsideAngular(() => this.setTime());\n  }\n\n  setTime() {\n    if (this.isDestroy) { return; }\n    const now = new Date();\n    this.time = `${now.getHours()}:${this.formatNum(now.getMinutes())}`;\n    this.cd.detectChanges();\n    setTimeout(this.setTime.bind(this), 6000);\n  }\n\n  formatNum(i) {\n    return i < 10 ? `0${i}` : i;\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { ComponentsComponent } from './components.component';\nimport { ClockAndDateComponent } from './clock-and-date/clock-and-date.component';\n\n\n\n@NgModule({\n  declarations: [ComponentsComponent, ClockAndDateComponent],\n  imports: [\n  ],\n  exports: [ComponentsComponent]\n})\nexport class ComponentsModule { }\n","import { Component, OnInit, Input, ViewChild, ViewEncapsulation, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { Column } from 'types'; \nimport { MatTableDataSource } from '@angular/material';\nimport {MatPaginator} from '@angular/material/paginator';\n \n\n@Component({\n  selector: 'lib-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class TableComponent implements OnInit, OnChanges {\n \n  @Input() columns:Column[];\n  @Input() rows:any[];\n  @Output() dbClick = new EventEmitter<any>();\n  displayedColumns: string[] =[]\n  dataSource \n    \n    \n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  constructor() { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.displayedColumns = this.columns.map(({name}) => name   )\n    }, 200);\n      \n    \n     this.dataSource = new MatTableDataSource<any>(this.rows);\n    //this.dataSource.paginator = this.paginator;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n     const {rows} = changes;\n     if(rows){\n       this.dataSource = new MatTableDataSource<any>(rows.currentValue);\n       this.dataSource.paginator = this.paginator;\n     }\n  }\n\n  getRecord(row){\n      this.dbClick.emit(row);   \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material';\nimport { DirectivesModule } from 'directives';\n\n\n@NgModule({\n  declarations: [TableComponent],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    DirectivesModule\n  ],\n  exports:[TableComponent]\n})\nexport class TableModule { }\n"]}