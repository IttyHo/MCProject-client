{"version":3,"file":"pipes.umd.js","sources":["ng://pipes/lib/pipes.service.ts","ng://pipes/lib/pipes.component.ts","ng://pipes/lib/pipes.module.ts","ng://pipes/lib/pipes/get-img-path.pipe.ts","ng://pipes/lib/pipes/has-errors.pipe.ts","ng://pipes/lib/pipes/get-error.pipe.ts","ng://pipes/lib/pipes/all-pipes.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PipesService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-pipes',\r\n  template: `\r\n    <p>\r\n      pipes works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class PipesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { PipesComponent } from './pipes.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [PipesComponent],\r\n  imports: [\r\n  ],\r\n  exports: [PipesComponent]\r\n})\r\nexport class PipesModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n \r\n import { GetOptionsService } from 'services'; \r\n\r\n\r\n@Pipe({  name: 'getImgPath'})\r\nexport class GetImgPathPipe implements PipeTransform {\r\n  constructor(private service: GetOptionsService) { }\r\n  transform(img: string): string  {\r\n    // console.log(img+\"      img\");    \r\n    return this.service.getOptionByImage(img);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Pipe({  name: 'hasErrors'})\nexport class HasErrorsPipe implements PipeTransform {\n\n  transform(formGroup: FormGroup, controlName:string): any {\n    return !!Object.keys(formGroup.controls[controlName].errors).length ;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\n@Pipe({  name: 'getError'})\nexport class GetErrorPipe implements PipeTransform {\n\n  transform(errors: ValidationErrors):  string[] {\n    if(!errors){\n      return [];\n    }\n    let errorsToDisplay = [];\n    // Object.keys(errors).forEach(error => {\n    //   switch(error){\n    //     case'required': errorsToDisplay= [...errorsToDisplay, 'שדה חובה']\n    //          break;\n    //     case'invalidEmailAddress': errorsToDisplay= [...errorsToDisplay, 'כתובת אמייל לא נכונה']\n    //          break;\n    //     case'maxlength': errorsToDisplay= [...errorsToDisplay, 'מספר תווים לא תקין']\n    //          break;\n    //   }\n    // }); \n    return errorsToDisplay ;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GetImgPathPipe } from './get-img-path.pipe';\r\nimport { HasErrorsPipe } from './has-errors.pipe';\r\nimport { GetErrorPipe } from './get-error.pipe';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [GetImgPathPipe, HasErrorsPipe, GetErrorPipe],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports: [GetImgPathPipe,\r\n    HasErrorsPipe,\r\n    GetErrorPipe,\r\n]\r\n\r\n})\r\nexport class AllPipesModule { }\r\n"],"names":["Injectable","Component","NgModule","Pipe","GetOptionsService","CommonModule","FormsModule"],"mappings":";;;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;2BAJD;KAEA;;;;;;;ACFA;QAaE;SAAiB;;;;QAEjB,iCAAQ;;;QAAR;SACC;;oBAdFC,cAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,6CAIT;qBAEF;;;;QAQD,qBAAC;KAhBD;;;;;;;ACFA;QAKA;SAM4B;;oBAN3BC,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,cAAc,CAAC;wBAC9B,OAAO,EAAE,EACR;wBACD,OAAO,EAAE,CAAC,cAAc,CAAC;qBAC1B;;QAC0B,kBAAC;KAN5B;;;;;;;ACLA;QAOE,wBAAoB,OAA0B;YAA1B,YAAO,GAAP,OAAO,CAAmB;SAAK;;;;;QACnD,kCAAS;;;;QAAT,UAAU,GAAW;;YAEnB,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;SAC3C;;oBANFC,SAAI,SAAC,EAAG,IAAI,EAAE,YAAY,EAAC;;;;oBAHlBC,0BAAiB;;QAW3B,qBAAC;KARD,IAQC;;;;;;QANa,iCAAkC;;;;;;;;ACPhD;QAGA;SAOC;;;;;;QAJC,iCAAS;;;;;QAAT,UAAU,SAAoB,EAAE,WAAkB;YAChD,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAE;SACtE;;oBALFD,SAAI,SAAC,EAAG,IAAI,EAAE,WAAW,EAAC;;QAO3B,oBAAC;KAPD;;;;;;;ACHA;QAGA;SAsBC;;;;;QAnBC,gCAAS;;;;QAAT,UAAU,MAAwB;YAChC,IAAG,CAAC,MAAM,EAAC;gBACT,OAAO,EAAE,CAAC;aACX;;gBACG,eAAe,GAAG,EAAE;;;;;;;;;;;YAWxB,OAAO,eAAe,CAAE;SACzB;;oBAnBFA,SAAI,SAAC,EAAG,IAAI,EAAE,UAAU,EAAC;;QAsB1B,mBAAC;KAtBD;;;;;;;ACHA;QASA;SAY+B;;oBAZ9BD,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,cAAc,EAAE,aAAa,EAAE,YAAY,CAAC;wBAC3D,OAAO,EAAE;4BACPG,mBAAY;4BACZC,iBAAW;yBACZ;wBACD,OAAO,EAAE,CAAC,cAAc;4BACtB,aAAa;4BACb,YAAY;yBACf;qBAEA;;QAC6B,qBAAC;KAZ/B;;;;;;;;;;;;;;;;;;"}